name: Deploy Microservice

on:
  workflow_call:
    inputs:
      module_path:
        required: true
        type: string
      docker_image:
        required: true
        type: string

jobs:
  deploy-micro:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
      - name: Build microservice JAR
        run: |
          echo "<settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${DEPLOY_TOKEN}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>github</id>
                <repositories>
                  <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/gescoes/commons_parent</url>
                  </repository>
                  <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/gescoes/common_backend</url>
                  </repository>
                  <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/gescoes/commons_model</url>
                  </repository>
                </repositories>
              </profile>
            </profiles>
            <activeProfiles>
              <activeProfile>github</activeProfile>
            </activeProfiles>
          </settings>" > settings.xml
          cd ${{ inputs.module_path }}
          mvn clean package -s settings.xml
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        run: |
          docker build -t ${inputs.docker_image}:latest ${{ inputs.module_path }}
          docker push ${inputs.docker_image}:latest
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            export IMAGE_TAG=${GITHUB_SHA}
            docker-compose down
            docker-compose pull
            docker-compose up -d --force-recreate
